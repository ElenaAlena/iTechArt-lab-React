{"version":3,"sources":["components/Layout/styled.js","config/constants/routes.js","components/ActionAlert/ActionAlert.jsx","config/constants/alertMode.js","config/actions/alertActions.js","components/Layout/Layout.jsx","components/PrivateRoute/PrivateRoute.jsx","utils/utils.js","components/NotesList/Note/styled.js","components/NotesList/Note/Note.jsx","components/NotesList/styled.js","components/NotesList/NotesList.jsx","components/Filter/styled.js","components/Filter/FilterByDate.jsx","components/Filter/FilterByTitle.jsx","pages/myNotes/MyNoteDescription/myNotesDesctiption.jsx","pages/myNotes/MyNoteEdit/styled.js","pages/myNotes/MyNoteEdit/MyNoteEdit.jsx","pages/myNotes/styled.js","pages/myNotes/MyNotes.jsx","utils/userService.js","api/noteQueryActions.js","pages/myNotes/myNotesContainer.jsx","api/noteActions.js","pages/about/about.jsx","pages/about/aboutContainer.jsx","config/constants/notes.js","pages/sharedNotes/styled.js","pages/sharedNotes/sharedNotes.jsx","pages/sharedNotes/sharedNotesContainer.jsx","pages/page404/Page404.jsx","pages/page404/Page404Container.jsx","config/constants/authformdata.js","pages/register/styled.js","pages/register/register.jsx","config/constants/userMode.js","config/actions/userActions.js","pages/register/registerContainer.jsx","pages/login/styled.js","pages/login/login.jsx","pages/login/loginContainer.jsx","App.js","reportWebVitals.js","config/reducers/authenticationReducer.js","config/reducers/index.js","config/reducers/alertReducer.js","config/reducers/registrationReducer.js","config/reducers/usersReducer.js","utils/store.js","utils/fake-backend.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","navLink","color","padding","fontSize","minWidth","boxSizing","fontFamily","fontWeight","lineHeight","borderRadius","letterSpacing","textTransform","textDecoration","active","ROUTES","path","component","isLink","private","ActionAlert","alert","Alert","severity","type","text","ALERTMODE","alertActions","message","queryClient","QueryClient","Layout","children","classes","useSelector","state","alertReducer","user","authenticationReducer","history","useHistory","dispatch","useDispatch","useEffect","listen","location","action","firstName","QueryClientProvider","client","contextSharing","Fragment","className","AppBar","position","Toolbar","Typography","variant","map","route","index","to","activeClassName","PrivateRoute","Component","rest","roles","render","props","localStorage","getItem","pathname","from","authHeader","JSON","parse","token","Authorization","UseStyles","marginBottom","textAlign","meta","backgroundColor","btn","Note","date","description","length","note","activeNoteId","setActiveNoteId","isEditMode","setIsEditMode","isSharedMode","onDeleteNote","cardClasses","id","join","Card","onClick","noteId","CardHeader","IconButton","event","stopPropagation","onCloseNote","onEditNote","onDeleteAnyNote","CardContent","substr","gutterBottom","dateCreation","Date","toLocaleDateString","hour","minute","authorName","noteList","NotesList","notes","style","display","flexWrap","textField","marginLeft","marginTop","width","FilterByDate","onFilterByDate","TextField","label","defaultValue","margin","onChange","target","value","InputLabelProps","shrink","FilterByTitle","onFilterByTitle","MyNoteDesctiption","activeNote","useStylesNoteEdit","formElementContainer","formElement","MyNoteEdit","onUpdateNote","useState","updatedNote","setUpdatedNote","onEditField","field","noValidate","autoComplete","e","fullWidth","TextareaAutosize","minRows","placeholder","Button","paper","palette","secondary","alignLeft","headerBtn","MyNotes","getActiveNote","onAddNote","Grid","container","item","xs","pages","page","i","data","Paper","login","email","password","a","requestOptions","method","headers","body","stringify","fetch","response","handleResponse","setItem","logout","removeItem","then","ok","status","window","reload","error","statusText","Promise","reject","userService","register","getAll","pageNumber","params","setNewNote","newNote","queryName","setQueryData","pageParams","MyNotesContainer","useQueryClient","useStore","getState","filterDate","setFilterDate","filterTitle","setFilterTitle","filteredNotes","setFilteredNotes","useInfiniteQuery","pageParam","res","getNextPageParam","lastPage","nextId","fetchNextPage","hasNextPage","isFetching","isFetchingNextPage","console","log","observer","useRef","lastElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","filterNotes","filter","fText","fDate","forEach","pageData","toLowerCase","includes","toDateString","activeNoteArray","reduce","resultItem","pageItems","allNotes","defaultNotes","defaultNote","updateNote","uuid","now","unshift","addNewNote","deleteNote","pageToRemove","slice","setDeletedNote","updatedNotesArr","ref","About","AboutContainer","NOTES","authorEmail","SharedNotes","SharedNotesContainer","sharedNotes","find","Page404","goBack","Page404Container","AUTHFORMDATA","name","required","initialValue","forLogin","flexDirection","alignItems","formContainer","maxWidth","Register","formik","onSubmit","handleSubmit","handleChange","values","errors","helperText","href","USERMODE","userActions","success","pushState","go","failure","toString","request","validate","lastName","test","dateOfBirth","confirmpassword","RegisterContainer","getInitialValues","initialValues","formItem","useFormik","Login","componentRegistry","LoginContainer","useLocation","sd","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loggedIn","rootReducer","combineReducers","loggingIn","registrationReducer","registering","usersReducer","loading","items","users","store","createLogger","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","configureFakeBackend","realFetch","url","opts","resolve","authenticate","x","okResult","Math","max","push","userEmail","setDefaultNotes","getUsers","isLoggedIn","unauthorized","getNotes","notesList","pageId","setTimeout","endsWith","catch","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.94add8de.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  navLink: {\r\n    color: \"#fff\",\r\n    padding: \"6px 8px\",\r\n    fontSize: \"0.875rem\",\r\n    minWidth: \"64px\",\r\n    boxSizing: \"border-box\",\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: \"500\",\r\n    lineHeight: \"1.75\",\r\n    borderRadius: \"4px\",\r\n    letterSpacing: \"0.02857em\",\r\n    textTransform: \"uppercase\",\r\n    textDecoration: \"none\",\r\n  },\r\n  active:{\r\n      color:'pink'\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","const ROUTES =[\r\n    {\r\n        path:\"/login\",\r\n        component:'LoginContainer',\r\n        title: \"Log In\",\r\n        isLink:false,\r\n        private:false\r\n    },\r\n    {\r\n        path:\"/register\",\r\n        component:'RegisterContainer',\r\n        title: \"Register\",\r\n        isLink:false,\r\n        private:false\r\n    },\r\n    {\r\n        path:\"/notes\",\r\n        component:'MyNotesContainer',\r\n        title: \"notes\",\r\n        isLink:true,\r\n        private:true\r\n    },\r\n    {\r\n        path:\"/about\",\r\n        component:'About',\r\n        title: \"About\",\r\n        isLink:true,\r\n        private:false\r\n    },\r\n    {\r\n        path:\"/shared-notes\",\r\n        component:'SharedNotesContainer',\r\n        title: \"Shared Notes\",\r\n        isLink:true,\r\n        private:true\r\n    },\r\n    {\r\n        path:\"/not-found\",\r\n        component:'Page404Container',\r\n        title: \"Page 404\",\r\n        isLink:false,\r\n        private:false\r\n    },\r\n    {\r\n        path:\"/login\",\r\n        component:'LoginContainer',\r\n        title: \"Log out\",\r\n        isLink:false,\r\n        private:true\r\n    },\r\n    {\r\n        path:\"/\",\r\n        component:'MyNotesContainer',\r\n        title: \"notes\",\r\n        isLink:false,\r\n        private:true\r\n    }\r\n]\r\n\r\nexport default ROUTES;","import Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst ActionAlert = ({alert}) =>\r\n  alert ? <Alert severity={alert.type || \"info\"}>{alert.text}</Alert> : null;\r\nexport default ActionAlert;\r\n","export const ALERTMODE = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    CLEAR: 'ALERT_CLEAR'\r\n};","import { ALERTMODE } from \"config/constants/alertMode\";\r\n\r\n\r\nconst success = (message) => {\r\n  return { type: ALERTMODE.SUCCESS, message };\r\n};\r\n\r\nconst error = (message) => {\r\n  return { type: ALERTMODE.ERROR, message };\r\n};\r\n\r\nconst clear = () => {\r\n  return { type: ALERTMODE.CLEAR };\r\n};\r\n\r\nexport const alertActions = {\r\n  success,\r\n  error,\r\n  clear,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport useStyles from \"./styled\";\r\nimport ROUTES from \"config/constants/routes\";\r\nimport ActionAlert from \"components/ActionAlert/ActionAlert\";\r\nimport { alertActions } from \"config/actions/alertActions\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst Layout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const alert = useSelector((state) => state.alertReducer);\r\n  const user = useSelector((state) => {\r\n    return state.authenticationReducer.user;\r\n  });\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    history.listen((location, action) => {\r\n      dispatch(alertActions.clear());\r\n    });\r\n  }, []);\r\n  const title = user && user.firstName ? `HI ${user.firstName}` : \"\";\r\n  return (\r\n    <QueryClientProvider client={queryClient} contextSharing={true}>\r\n      <React.Fragment>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                {title}\r\n              </Typography>\r\n              {ROUTES.map(\r\n                (route, index) =>\r\n                  route.isLink && (\r\n                    <NavLink\r\n                      className={classes.navLink}\r\n                      to={route.path}\r\n                      activeClassName={classes.active}\r\n                      key={index}\r\n                    >\r\n                      {route.title}\r\n                    </NavLink>\r\n                  )\r\n              )}\r\n              {user && (\r\n                <NavLink\r\n                  className={classes.navLink}\r\n                  to=\"/login\"\r\n                  activeClassName={classes.active}\r\n                >\r\n                  LogOut\r\n                </NavLink>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n        {alert.message && (\r\n          <ActionAlert alert={{ type: alert.type, text: alert.message }} />\r\n        )}\r\n        {children}\r\n      </React.Fragment>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\nLayout.propTypes = {\r\n  children: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\nexport default Layout;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      if (!localStorage.getItem(\"user\")) {\r\n        return (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        );\r\n      }\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","const cutDescription = (description, length) => description.substr(0, length);\r\n\r\nconst dateFormatter = (date) =>\r\n  new Date(date).toLocaleDateString(\"en-GB\", {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  });\r\n\r\nconst authHeader = () => {\r\n  let user = JSON.parse(localStorage.getItem(\"user\"));\r\n  return (user && user.token) ? { Authorization: \"Bearer \" + user.token } : {};\r\n};\r\n\r\nexport { cutDescription, dateFormatter, authHeader };\r\n","\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst UseStyles = makeStyles({\r\n    root: {\r\n      marginBottom: \"12px\",\r\n      textAlign: \"right\",\r\n    },\r\n    text: {\r\n      textAlign: \"left\",\r\n    },\r\n    meta: {\r\n      fontSize: 10,\r\n      textAlign: \"right\",\r\n    },\r\n    active: {\r\n      backgroundColor: \"aliceblue\",\r\n    },\r\n    btn: {\r\n      padding: \"3px\",\r\n    },\r\n  });\r\n\r\n  export default UseStyles;","import PropTypes from \"prop-types\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport { cutDescription, dateFormatter } from \"utils/utils.js\";\r\n/*import SharedSelect from \"components/SharedSelect/SharedSelect\";*/\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nexport const Note = ({\r\n  note,\r\n  activeNoteId,\r\n  setActiveNoteId,\r\n  isEditMode,\r\n  setIsEditMode,\r\n  isSharedMode,\r\n  onDeleteNote,\r\n}) => {\r\n  const classes = useStyles();\r\n  const onCloseNote = (event) => {\r\n    event.stopPropagation();\r\n    setActiveNoteId(-1);\r\n  };\r\n  const onEditNote = (event) => {\r\n    event.stopPropagation();\r\n    setActiveNoteId(note.id);\r\n    setIsEditMode(true);\r\n  };\r\n  const onShowNote = (noteId) => {\r\n    !isSharedMode && setIsEditMode(false);\r\n    setActiveNoteId(noteId);\r\n  };\r\n  const onDeleteAnyNote = (event, noteId) => {\r\n    event.stopPropagation();\r\n    setActiveNoteId(\"\");\r\n    onDeleteNote(note.id);\r\n  };\r\n  const cardClasses = [\r\n    classes.root,\r\n    note && note.id === activeNoteId ? classes.active : \"\",\r\n  ].join(\" \");\r\n  return (\r\n    note && <Card className={cardClasses} onClick={() => onShowNote(note.id)}>\r\n      <CardHeader\r\n        className={classes.text}\r\n        action={\r\n          <div>\r\n            {note.id === activeNoteId && !isEditMode && (\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                className={classes.btn}\r\n                onClick={(event) => onCloseNote(event)}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            )}\r\n            {!isSharedMode && (\r\n              <IconButton\r\n                aria-label=\"edit\"\r\n                className={classes.btn}\r\n                onClick={(event) => onEditNote(event)}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            )}\r\n            {!isSharedMode && (\r\n              <IconButton\r\n                aria-label=\"Delete\"\r\n                className={classes.btn}\r\n                onClick={(event) => onDeleteAnyNote(event, note.id)}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            )}\r\n          </div>\r\n        }\r\n        title={note.title}\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          className={classes.text}\r\n        >\r\n          {note.description && cutDescription(note.description, 20) + \"...\"}\r\n        </Typography>\r\n        <Typography className={classes.meta} color=\"textSecondary\" gutterBottom>\r\n          Date of creation {dateFormatter(note.dateCreation)}\r\n        </Typography>\r\n        {isSharedMode && (\r\n          <Typography\r\n            className={classes.meta}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            by {note.authorName}\r\n          </Typography>\r\n        )}\r\n        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nNote.propTypes = {\r\n  activeNoteId: PropTypes.string,\r\n  setActiveNoteId: PropTypes.func,\r\n  note: PropTypes.object,\r\n  setIsEditMode: PropTypes.func,\r\n  isEditMode: PropTypes.bool,\r\n  isSharedMode: PropTypes.bool,\r\n};\r\n","\r\nconst useStyles = {\r\n  noteList: {\r\n  },\r\n};\r\n\r\nexport default useStyles;","import PropTypes from \"prop-types\";\r\n\r\nimport { Note } from \"./Note\";\r\nimport useStyles from \"./styled\"\r\n\r\nconst NotesList = ({ notes,activeNoteId, setActiveNoteId,isEditMode, setIsEditMode,isSharedMode=false, onDeleteNote}) => {  \r\n\r\n  return (\r\n  <div style={useStyles.noteList}>\r\n    {notes && notes.map((note, index) => (\r\n      <Note\r\n        note={note}     \r\n        activeNoteId={activeNoteId}\r\n        setActiveNoteId={setActiveNoteId}\r\n        isEditMode={isEditMode}\r\n        setIsEditMode={setIsEditMode}\r\n        isSharedMode={isSharedMode}\r\n        key={index}\r\n        onDeleteNote={onDeleteNote}\r\n      />\r\n    ))}\r\n  </div>\r\n)}\r\n\r\nNotesList.propTypes = {\r\n  activeNoteId: PropTypes.string,\r\n  notes: PropTypes.arrayOf(PropTypes.object),\r\n  setActiveNoteId: PropTypes.func,\r\n  setIsEditMode:PropTypes.func,\r\n  isEditMode:PropTypes.bool,\r\n};\r\n\r\nexport default NotesList;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      marginTop:0,\r\n      marginBottom:0,\r\n      width: '25ch',\r\n    },\r\n  }));\r\n\r\n  export default useStyles;\r\n  ","import TextField from \"@material-ui/core/TextField\";\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nconst FilterByDate = ({onFilterByDate} ) => {\r\n  const classes = useStyles();\r\n  const handleFilterByDate=(event)=>{    \r\n    onFilterByDate(event.target.value);\r\n  }\r\n  return (\r\n    <TextField\r\n      label=\"Filter by Date\"\r\n      id=\"filterNotes\"\r\n      defaultValue=\"\"\r\n      type=\"date\"\r\n      className={classes.textField}      \r\n      margin=\"dense\"\r\n      variant=\"outlined\"\r\n      onChange = {handleFilterByDate}\r\n      InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n    />\r\n  );\r\n};\r\nexport default FilterByDate;","import TextField from \"@material-ui/core/TextField\";\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nconst FilterByTitle = ({onFilterByTitle} ) => {\r\n  const classes = useStyles();\r\n  const handleFilterByText=(event)=>{    \r\n    onFilterByTitle(event.target.value);\r\n  }\r\n  return (\r\n    <TextField\r\n      label=\"Filter by Note Title\"\r\n      id=\"filterTitles\"\r\n      defaultValue=\"\"\r\n      className={classes.textField}      \r\n      margin=\"dense\"\r\n      variant=\"outlined\"\r\n      onChange = {handleFilterByText}\r\n      InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n    />\r\n  );\r\n};\r\nexport default FilterByTitle;","import PropTypes from \"prop-types\";\r\n\r\nconst MyNoteDesctiption = ({ activeNote }) =>\r\n  activeNote ? <p>{activeNote.description}</p> : <div>No Active Note</div>;\r\n\r\nMyNoteDesctiption.propTypes = {\r\n  activeNote: PropTypes.object,\r\n};\r\nexport default MyNoteDesctiption;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStylesNoteEdit = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formElementContainer:{\r\n      width:'100%',\r\n    },\r\n    formElement:{\r\n      width:'100%',\r\n    }\r\n  }));\r\n\r\n  export default useStylesNoteEdit","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport useStylesNoteEdit from \"./styled\";\r\n\r\nconst MyNoteEdit = ({ activeNote, onUpdateNote }) => {\r\n  const classes = useStylesNoteEdit();\r\n\r\n  const [updatedNote, setUpdatedNote] = useState({ ...activeNote });\r\n  updatedNote.id !== activeNote.id && setUpdatedNote({ ...activeNote });\r\n\r\n  const onEditField = (field, value) => {\r\n    setUpdatedNote({ ...updatedNote, [field]: value });\r\n  };\r\n\r\n  const onSaveNote = () => {\r\n    onUpdateNote(updatedNote);\r\n  };\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div className={classes.formElementContainer}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Note Title\"\r\n          variant=\"outlined\"\r\n          value={updatedNote.title}\r\n          onChange={(e) => onEditField(\"title\", e.target.value)}\r\n          fullWidth\r\n        />\r\n      </div>\r\n      <div className={classes.formElementContainer}>\r\n        <TextareaAutosize\r\n          aria-label=\"minimum height\"\r\n          minRows={10}\r\n          placeholder=\"Add description for note\"\r\n          value={updatedNote.description}\r\n          className={classes.formElement}\r\n          onChange={(e) => onEditField(\"description\", e.target.value)}\r\n        />\r\n      </div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={onSaveNote}>\r\n        Save Note\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nMyNoteEdit.propTypes = {\r\n  activeNote: PropTypes.object,\r\n  onUpdateNote: PropTypes.func,\r\n  setIsEditMode: PropTypes.func,\r\n};\r\nexport default MyNoteEdit;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst UseStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  alignLeft:{\r\n    textAlign:'left',    \r\n  },\r\n  headerBtn:{\r\n    margin:'0 20px'\r\n  }\r\n}));\r\n\r\nexport default UseStyles;","import PropTypes from \"prop-types\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport NotesList from \"components/NotesList/NotesList\";\r\nimport FilterByDate from \"components/Filter/FilterByDate\";\r\nimport FilterByTitle from \"components/Filter/FilterByTitle\";\r\n\r\nimport MyNoteDesctiption from \"./MyNoteDescription/myNotesDesctiption\";\r\nimport MyNoteEdit from \"./MyNoteEdit/MyNoteEdit\";\r\n\r\nimport useStyles from \"./styled.js\";\r\n\r\nconst MyNotes = ({\r\n  notes,\r\n  activeNoteId,\r\n  setActiveNoteId,\r\n  getActiveNote,\r\n  isEditMode,\r\n  setIsEditMode,\r\n  onUpdateNote,\r\n  onAddNote,\r\n  onDeleteNote,\r\n  onFilterByDate,\r\n  onFilterByTitle\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          \r\n            <h1>My list of Notes</h1>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.alignLeft}>\r\n            <Button variant=\"contained\" className={classes.headerBtn} onClick={onAddNote}>Add Note</Button>\r\n            <FilterByDate onFilterByDate={onFilterByDate} />            \r\n            <FilterByTitle onFilterByTitle={onFilterByTitle} />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n        {notes && notes.pages.map((page, i) => (\r\n          <NotesList\r\n            notes={page.data}\r\n            activeNoteId={activeNoteId}\r\n            setActiveNoteId={setActiveNoteId}\r\n            isEditMode={isEditMode}\r\n            setIsEditMode={setIsEditMode}\r\n            onDeleteNote={onDeleteNote}\r\n            key={i}\r\n          />\r\n        ))}\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Paper className={classes.paper}>\r\n            {(isEditMode && getActiveNote()) ? (\r\n              <MyNoteEdit\r\n                activeNote={getActiveNote()}\r\n                onUpdateNote={onUpdateNote}\r\n              />\r\n            ) : (\r\n              <MyNoteDesctiption activeNote={getActiveNote()} />\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nMyNotes.propTypes = {\r\n  activeNoteId: PropTypes.string,\r\n  notes: PropTypes.any,\r\n  setActiveNoteId: PropTypes.func,\r\n  getActiveNote: PropTypes.func,\r\n  isEditMode: PropTypes.bool,\r\n  setIsEditMode: PropTypes.func,\r\n  onUpdateNote: PropTypes.func,\r\n};\r\nexport default MyNotes;\r\n","import { authHeader } from \"./utils\";\r\n\r\nconst login = async (email, password) => {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  };\r\n\r\n  const response = await fetch(\r\n    `/users/authenticate`,\r\n    requestOptions\r\n  );\r\n\r\n  const user = await handleResponse(response);\r\n  localStorage.setItem(\"user\", JSON.stringify(user));\r\n  return user;\r\n};\r\nconst notes = async (pageNumber) => {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(),\r\n    params: { date: \"\", page: pageNumber },\r\n  };\r\n  return fetch(`/notes`, requestOptions).then((response) => JSON.parse(response.text()));\r\n};\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getAll = () => {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: authHeader(),\r\n  };\r\n\r\n  return fetch(`/users`, requestOptions).then(\r\n    handleResponse\r\n  );\r\n};\r\n\r\nconst register = (user) => {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(user),\r\n  };\r\n\r\n  return fetch(`/users/register`, requestOptions).then(\r\n    handleResponse\r\n  );\r\n};\r\n\r\nconst handleResponse = (response) => {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        logout();\r\n        window.location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n};\r\n\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  register,\r\n  getAll,\r\n  notes,\r\n};\r\n","const setNewNote = async ({ newNote, queryClient, queryName }) => {\r\n  queryClient.setQueryData(queryName, (data) => {\r\n    const newPagesArray =\r\n      data?.pages.map((page, index) => {\r\n        if (index === 0) {\r\n          page.data = [newNote, ...page.data];\r\n        }\r\n        return page;\r\n      }) ?? [];\r\n    return {\r\n      pages: newPagesArray,\r\n      pageParams: data.pageParams,\r\n    };\r\n  });\r\n};\r\nconst setUpdatedNote = ({ updatedNote, queryClient, queryName }) => {\r\n  queryClient.setQueryData(queryName, (data) => {\r\n    const updatedNotesArr =\r\n      data?.pages.map((page) => {\r\n        page.data = page.data.map((note) =>\r\n          note?.id === updatedNote.id ? updatedNote : note\r\n        );\r\n        return page;\r\n      }) ?? [];\r\n    return {\r\n      pages: updatedNotesArr,\r\n      pageParams: data.pageParams,\r\n    };\r\n  });\r\n};\r\nconst setDeletedNote = ({ noteId, queryClient, queryName }) => {\r\n  queryClient.setQueryData(queryName, (data) => {\r\n    let pageToRemove = 0;\r\n    const updatedNotesArr =\r\n      data?.pages.map((page,index) => {\r\n        page.data = page.data?.filter((item) => item?.id !== noteId);\r\n        if(!page.data.length) pageToRemove = index+1;\r\n        return page;\r\n      }) ?? [];\r\n    return {\r\n      pages: updatedNotesArr.slice(pageToRemove),\r\n      pageParams: data.pageParams.slice(pageToRemove),\r\n    };\r\n  });\r\n};\r\n\r\nexport { setNewNote, setUpdatedNote, setDeletedNote };\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStore } from \"react-redux\";\r\nimport { useInfiniteQuery, useQueryClient } from \"react-query\";\r\n\r\nimport MyNotes from \"./MyNotes\";\r\nimport { userService } from \"utils/userService\";\r\nimport { addNewNote, updateNote, deleteNote } from \"api/noteActions\";\r\nimport {\r\n  setNewNote,\r\n  setUpdatedNote,\r\n  setDeletedNote,\r\n} from \"api/noteQueryActions\";\r\n\r\nconst MyNotesContainer = () => {\r\n  const queryClient = useQueryClient();\r\n  const state = useStore().getState();\r\n  const user = state.authenticationReducer.user;\r\n  const [activeNoteId, setActiveNoteId] = useState(null);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [filterDate, setFilterDate] = useState(\"\");\r\n  const [filterTitle, setFilterTitle] = useState(\"\");\r\n  const [filteredNotes, setFilteredNotes] = useState(null);\r\n  const {\r\n    data,\r\n    error,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n    isFetching,\r\n    isFetchingNextPage,\r\n    status,\r\n  } = useInfiniteQuery(\r\n    \"notes\",\r\n    async ({ pageParam = 0 }) => {\r\n      const res = await userService.notes(pageParam);\r\n      return res;\r\n    },\r\n    {\r\n      getNextPageParam: (lastPage) => (lastPage ? lastPage.nextId : 1 ?? false),\r\n    }\r\n  );\r\n\r\n  if (isFetchingNextPage) {\r\n    console.log(\"isFetchingNextPage\");\r\n  }\r\n  const observer = useRef();\r\n  const lastElementRef = useCallback(\r\n    (node) => {\r\n      if (isFetching) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasNextPage) {\r\n          fetchNextPage();\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [isFetching, hasNextPage, fetchNextPage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (filterTitle || filterDate) {\r\n      filterNotes();\r\n    } else setFilteredNotes(null);\r\n  }, [data, filterTitle, filterDate]);\r\n\r\n  const getActiveNote = () => {\r\n    let activeNote = null;\r\n    if (activeNoteId) {\r\n      const activeNoteArray = data?.pages.reduce((resultItem, page) => {\r\n        const pageItems = page.data.filter(\r\n          (pageData) => pageData?.id === activeNoteId\r\n        );\r\n        if (pageItems && pageItems.length) resultItem = pageItems;\r\n        return resultItem;\r\n      }, []);\r\n      if (!activeNoteArray.length) {\r\n        setActiveNoteId(\"\");\r\n        setIsEditMode(false);\r\n      } else {\r\n        activeNote = activeNoteArray[0];\r\n      }\r\n    }\r\n    return activeNote;\r\n  };\r\n  const onUpdateNote = (updatedNote) => {\r\n    updateNote({ updatedNote: updatedNote, user: user });\r\n    setUpdatedNote({\r\n      updatedNote: updatedNote,\r\n      queryClient: queryClient,\r\n      queryName: \"notes\",\r\n    });\r\n    if (filterTitle || filterDate) {\r\n      filterNotes();\r\n    }\r\n  };\r\n\r\n  const onAddNote = () => {\r\n    const newNote = {\r\n      id: uuid(),\r\n      title: \"Untitled Note\",\r\n      description: \"\",\r\n      dateCreation: Date.now(),\r\n      authorName: user.firstName,\r\n    };\r\n    addNewNote({ newNote: newNote, user: user });\r\n    setNewNote({\r\n      newNote: newNote,\r\n      queryClient: queryClient,\r\n      queryName: \"notes\",\r\n    }).then(() => {\r\n      \r\n      setActiveNoteId(newNote.id);\r\n      setIsEditMode(true);\r\n    });\r\n  };\r\n\r\n  const onFilterByDate = (date) => {\r\n    setFilterDate(date);\r\n    filterNotes({ date: date });\r\n  };\r\n  const onFilterByTitle = (text) => {\r\n    setFilterTitle(text);\r\n    filterNotes({ text: text });\r\n  };\r\n  const onDeleteNote = (noteId) => {\r\n    deleteNote({ noteId: noteId, user: user });\r\n    setDeletedNote({\r\n      noteId: noteId,\r\n      queryClient: queryClient,\r\n      queryName: \"notes\",\r\n    });\r\n    if (filterTitle || filterDate) {\r\n      const updatedNotesArr =filteredNotes.pages.map((page) => {\r\n        page.data = page.data?.filter((item) => item?.id !== noteId);        \r\n        return page;\r\n      }) ?? [];\r\n      setFilteredNotes({ pages: updatedNotesArr });\r\n    }\r\n  };\r\n\r\n  const filterNotes = (filter = {}) => {\r\n    setActiveNoteId(null);\r\n\r\n    const fText = filter.text ? filter.text : filterTitle;\r\n    const fDate = filter.date ? filter.date : filterDate;\r\n\r\n    const notes = [];\r\n    data?.pages.forEach((page, index) => {\r\n      notes[index] = {};\r\n      notes[index].data = page.data.filter((pageData) => {\r\n        if (pageData) {\r\n          let res = true;\r\n          if (fText) {\r\n            res = pageData.title.toLowerCase().includes(fText.toLowerCase());\r\n          }\r\n          if (fDate) {\r\n            res =\r\n              res &&\r\n              new Date(pageData.dateCreation).toDateString() ===\r\n                new Date(fDate).toDateString();\r\n          }\r\n          return res;\r\n        }\r\n        return false;\r\n      });\r\n    });\r\n    setFilteredNotes({ pages: notes });\r\n  };\r\n  return status === \"loading\" ? (\r\n    <p>Loading...</p>\r\n  ) : status === \"error\" ? (\r\n    <p>Error: {error.message}</p>\r\n  ) : (\r\n    <React.Fragment>\r\n      <MyNotes\r\n        notes={filteredNotes || data || []}\r\n        activeNoteId={activeNoteId}\r\n        setActiveNoteId={setActiveNoteId}\r\n        getActiveNote={getActiveNote}\r\n        isEditMode={isEditMode}\r\n        setIsEditMode={setIsEditMode}\r\n        onUpdateNote={onUpdateNote}\r\n        onAddNote={onAddNote}\r\n        onDeleteNote={onDeleteNote}\r\n        onFilterByDate={onFilterByDate}\r\n        onFilterByTitle={onFilterByTitle}\r\n      />\r\n      <div ref={lastElementRef}></div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nMyNotesContainer.propTypes = {\r\n  activeNoteId: PropTypes.string,\r\n  notes: PropTypes.arrayOf(PropTypes.object),\r\n  setActiveNoteId: PropTypes.func,\r\n};\r\nexport default MyNotesContainer;\r\n","const addNewNote = ({ newNote, user }) => {\r\n  const allNotes = JSON.parse(localStorage.getItem(\"notes\")) || {};\r\n  const notes = allNotes?.[user.email] || [];\r\n  notes.unshift(newNote);\r\n  allNotes[user.email] = notes;\r\n  localStorage.setItem(\"notes\", JSON.stringify(allNotes));\r\n};\r\n\r\nconst updateNote = ({ updatedNote, user }) => {\r\n  const allNotes = JSON.parse(localStorage.getItem(\"notes\")) || {};\r\n  let defaultNotes = allNotes?.[user.email];\r\n  if (defaultNotes) {\r\n    const notes = defaultNotes.map((defaultNote) =>\r\n      defaultNote.id === updatedNote.id ? updatedNote : defaultNote\r\n    );\r\n    allNotes[user.email] = notes;\r\n    localStorage.setItem(\"notes\", JSON.stringify(allNotes));\r\n  }\r\n};\r\nconst deleteNote = ({ noteId, user }) => {  \r\n  const allNotes = JSON.parse(localStorage.getItem(\"notes\")) || {};\r\n  const notes = allNotes?.[user.email].filter(\r\n    ({ id }) => id !== noteId\r\n  );\r\n  allNotes[user.email] = notes;\r\n  localStorage.setItem(\"notes\", JSON.stringify(allNotes));\r\n};\r\n\r\nexport { addNewNote, updateNote, deleteNote };\r\n","const About=()=>(\r\n    <h1>About</h1>\r\n)\r\n\r\nexport default About","import About from \"./about\";\r\nconst AboutContainer = () => (<About />);\r\n\r\nexport default AboutContainer;\r\n","const NOTES = [\r\n    {\r\n        title:\"What is Lorem Ipsum?\",\r\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n        dateCreation: new Date(\"Jul 20 2021\").toDateString(),\r\n        id:\"1\",\r\n        authorName:\"Anna\",\r\n        authorEmail:\"some@tut.by\"\r\n    },\r\n    {\r\n        title:\"Why do we use it?\",\r\n        description:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\",\r\n        dateCreation: new Date().toDateString(),\r\n        id:\"2\",\r\n        authorName:\"Anna\",\r\n        authorEmail:\"some@tut.by\"\r\n    },\r\n    {\r\n        title:\"Where does it come from?\",\r\n        description:'Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.       The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.',\r\n        dateCreation: new Date().toDateString(),\r\n        id:\"3\",\r\n        authorName:\"Anna\",\r\n        authorEmail:\"some@tut.by\"\r\n    },\r\n    {\r\n        title:\"Where can I get some?\",\r\n        description:\"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\",\r\n        dateCreation: new Date().toDateString(),\r\n        id:\"4\",\r\n        authorName:\"Anna\",\r\n        authorEmail:\"some@tut.by\"\r\n    }\r\n]\r\n\r\nexport default NOTES;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst UseStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default UseStyles;","import PropTypes from \"prop-types\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport NotesList from \"components/NotesList/NotesList\";\r\n\r\nimport useStyles from \"./styled.js\";\r\n\r\nconst SharedNotes = ({notes, activeNoteId, setActiveNoteId, getActiveNote}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <h1>My Shared list of Notes</h1>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <NotesList\r\n            notes={notes}\r\n            activeNoteId={activeNoteId}\r\n            setActiveNoteId={setActiveNoteId}\r\n            isEditMode={false}\r\n            setIsEditMode={null}\r\n            isSharedMode={true}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Paper className={classes.paper}>\r\n            {getActiveNote() ? (\r\n              <p>{getActiveNote().description}</p>\r\n            ) : (\r\n              <div>No Active Note</div>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nSharedNotes.propTypes = {\r\n  activeNoteId: PropTypes.string,\r\n  notes: PropTypes.arrayOf(PropTypes.object),\r\n  setActiveNoteId: PropTypes.func,\r\n  getActiveNote: PropTypes.func,\r\n  isSharedMode: PropTypes.bool,\r\n};\r\nexport default SharedNotes;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport NOTES from \"config/constants/notes.js\";\r\n\r\nimport SharedNotes from \"./sharedNotes\";\r\n\r\nconst SharedNotesContainer = () => {\r\n  const [notes, setNotes] = useState(\r\n    localStorage.sharedNotes ? JSON.parse(localStorage.sharedNotes) : NOTES\r\n  );\r\n  const [activeNoteId, setActiveNoteId] = useState(null);\r\n\r\n  const getActiveNote = () => notes.find(({ id }) => id === activeNoteId);\r\n\r\n  return (\r\n    <SharedNotes\r\n      notes={notes}\r\n      activeNoteId={activeNoteId}\r\n      setActiveNoteId={setActiveNoteId}\r\n      getActiveNote={getActiveNote}\r\n    />\r\n  );\r\n};\r\n\r\nSharedNotesContainer.propTypes = {\r\n  activeNoteId: PropTypes.string,\r\n  notes: PropTypes.arrayOf(PropTypes.object),\r\n  setActiveNoteId: PropTypes.func,\r\n};\r\n\r\nexport default SharedNotesContainer;\r\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Page404 = () => {\r\n  let history = useHistory();\r\n  const goToPreviousPath = () => {\r\n    history.goBack()\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Unfortunately, there is no such page.</h1>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={goToPreviousPath}>\r\n        Back\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import Page404 from './Page404'\r\nconst Page404Container=()=>(<Page404/>)\r\n\r\nexport default Page404Container;","const AUTHFORMDATA=[\r\n    {\r\n      id:'email',\r\n      label:'Email Address',\r\n      name:'email',\r\n      type:'email',\r\n      required:true,\r\n      initialValue:'',\r\n      forLogin:true\r\n    },\r\n    {\r\n      id:'firstName',\r\n      label:'First Name',\r\n      name:'firstName',\r\n      type:'text',\r\n      required:true,\r\n      initialValue:''\r\n    },\r\n    {\r\n      id:'lastName',\r\n      label:'Last Name',\r\n      name:'lastName',\r\n      type:'text',\r\n      required:true,\r\n      initialValue:''\r\n    },\r\n    {\r\n      id:'dateOfBirth',\r\n      label:'Date of birth',\r\n      name:'dateOfBirth',\r\n      type:'date',\r\n      required:true,\r\n      initialValue:''\r\n    },\r\n    {\r\n      id:'password',\r\n      label:'Enter Password',\r\n      name:'password',\r\n      type:'password',\r\n      required:true,\r\n      initialValue:'',\r\n      forLogin:true\r\n    },\r\n    {\r\n      id:'confirmpassword',\r\n      label:'Confirm password',\r\n      name:'confirmpassword',\r\n      type:'password',\r\n      required:true,\r\n      initialValue:''\r\n    }\r\n  ]\r\n  export default AUTHFORMDATA;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  formContainer: {\r\n    width: \"fit-content\",\r\n    maxWidth: \"30%\",\r\n    padding: \"30px\",\r\n  },\r\n  textField: {},\r\n  btn: {\r\n    marginRight: \"10px\",\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport AUTHFORMDATA from \"config/constants/authformdata\";\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nconst Register = ({ formik }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>AuthForm</h1>\r\n      <Paper className={classes.formContainer}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          {AUTHFORMDATA.map((data, index) => (\r\n            <div key={index}>\r\n              <TextField\r\n                id={data.id}\r\n                required={data.required}\r\n                label={data.label}\r\n                variant=\"outlined\"\r\n                name={data.name}\r\n                type={data.type}\r\n                onChange={formik.handleChange}\r\n                value={formik.values[data.id]}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                className={classes.textField}\r\n                margin=\"dense\"\r\n                error={!!formik.errors[data.id]}\r\n                helperText={formik.errors[data.id]}\r\n              />\r\n            </div>\r\n          ))}\r\n          <Button type=\"submit\" variant=\"contained\" className={classes.btn}>\r\n            Register\r\n          </Button>\r\n          <a href=\"/login\">Log In</a>         \r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export const USERMODE = {\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    \r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE'  \r\n};\r\n","import { userService } from \"../../utils/userService\";\r\nimport { alertActions } from \"./alertActions\";\r\n\r\nimport { USERMODE } from \"config/constants/userMode\";\r\n\r\nconst login = (email, password, from) => {\r\n  const request = (user) => ({ type: USERMODE.LOGIN_REQUEST, user });\r\n  const success = (user) => ({ type: USERMODE.LOGIN_SUCCESS, user });\r\n  const failure = (error) => ({ type: USERMODE.LOGIN_FAILURE, error });\r\n\r\n\r\n  return (dispatch) => {\r\n    dispatch(request({ email }));\r\n\r\n    userService.login(email, password).then(\r\n      (user) => {\r\n        dispatch(success(user));\r\n        window.history.pushState(from, \"\", from.pathname);\r\n        window.history.go(0);\r\n      },\r\n      (error) => {\r\n        dispatch(failure(error.toString()));\r\n        dispatch(alertActions.error(error.toString()));\r\n      }\r\n    );\r\n  };\r\n};\r\nconst logout = () => {\r\n  userService.logout();\r\n  return { type: USERMODE.LOGOUT };\r\n};\r\n\r\nconst register = (user) => {\r\n  const request = (user) => ({ type: USERMODE.REGISTER_REQUEST, user });\r\n  const success = (user) => ({ type: USERMODE.REGISTER_SUCCESS, user });\r\n  const failure = (error) => ({ type: USERMODE.REGISTER_FAILURE, error });\r\n\r\n  return (dispatch) => {\r\n    dispatch(request(user));\r\n\r\n    userService.register(user).then(\r\n      (user) => {\r\n        dispatch(success());\r\n        window.history.pushState(null, \"LoginForm\", \"/login\");\r\n        window.history.go(0);\r\n        dispatch(alertActions.success(\"Registration successful\"));\r\n      },\r\n      (error) => {\r\n        dispatch(failure(error.toString()));\r\n        dispatch(alertActions.error(error.toString()));\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = () => ({ type: USERMODE.GETALL_REQUEST });\r\n  const success = (users) => ({ type: USERMODE.GETALL_SUCCESS, users });\r\n  const failure = (error) => ({ type: USERMODE.GETALL_FAILURE, error });\r\n\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n\r\n    userService.getAll().then(\r\n      (users) => dispatch(success(users)),\r\n      (error) => dispatch(failure(error.toString()))\r\n    );\r\n  };\r\n};\r\n\r\nexport const userActions = {\r\n  login,\r\n  logout,\r\n  register,\r\n  getAll,\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Register from \"./register\";\r\n\r\nimport AUTHFORMDATA from \"config/constants/authformdata\";\r\nimport { userActions } from \"config/actions/userActions\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = \"Required\";\r\n  } else if (values.firstName.length > 15) {\r\n    errors.firstName = \"Must be 15 characters or less\";\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = \"Required\";\r\n  } else if (values.lastName.length > 20) {\r\n    errors.lastName = \"Must be 20 characters or less\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n  if (!values.dateOfBirth) {\r\n    errors.dateOfBirth = \"Required\";\r\n  }\r\n  if (!values.password) {\r\n    errors.password = \"Required\";\r\n  } else if (values.password !== values.confirmpassword) {\r\n    errors.password = \"Passwords mismatch\";\r\n  }\r\n\r\n  if (!values.confirmpassword) {\r\n    errors.confirmpassword = \"Required\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst RegisterContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // reset login status\r\n  useEffect(() => {\r\n    dispatch(userActions.logout());\r\n  }, []);\r\n\r\n\r\n  const getInitialValues = AUTHFORMDATA.reduce((initialValues, formItem) => {\r\n    initialValues[formItem.id] = formItem.initialValue;\r\n    return initialValues;\r\n  }, {});\r\n  const formik = useFormik({\r\n    initialValues: getInitialValues,\r\n    validate,\r\n    onSubmit: (values) => {\r\n      if (values) {\r\n        dispatch(userActions.register(values));\r\n      }\r\n    },\r\n  });\r\n  return <Register formik={formik} />;\r\n};\r\n\r\nexport default RegisterContainer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  formContainer: {\r\n    width: \"fit-content\",\r\n    maxWidth: \"30%\",\r\n    padding: \"30px\",\r\n  },\r\n  textField: {},\r\n  btn: {\r\n    marginRight: \"10px\",\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport AUTHFORMDATA from \"config/constants/authformdata\";\r\n\r\nimport useStyles from \"./styled\";\r\n\r\nconst Login = ({ formik }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>LoginForm</h1>\r\n      <Paper className={classes.formContainer}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          {AUTHFORMDATA.map(\r\n            (data, index) =>\r\n              data.forLogin && (\r\n                <div key={index}>\r\n                  <TextField\r\n                    id={data.id}\r\n                    required={data.required}\r\n                    label={data.label}\r\n                    variant=\"outlined\"\r\n                    name={data.name}\r\n                    type={data.type}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values[data.id]}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    margin=\"dense\"\r\n                    error={!!formik.errors[data.id]}\r\n                    helperText={formik.errors[data.id]}\r\n                  />\r\n                </div>\r\n              )\r\n          )}\r\n          <Button type=\"submit\" variant=\"contained\" className={classes.btn}>\r\n            Login\r\n          </Button>\r\n          <a href=\"/register\" component=\"button\">\r\n            Register\r\n          </a>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect,useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Login from \"./login\";\r\n\r\nimport AUTHFORMDATA from \"config/constants/authformdata\";\r\nimport { userActions } from \"config/actions/userActions\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } /*else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }*/\r\n  if (!values.password) {\r\n    errors.password = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst LoginContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  // reset login status\r\n  useEffect(() => {\r\n    dispatch(userActions.logout());\r\n  }, []);\r\n\r\n  const getInitialValues = AUTHFORMDATA.reduce((initialValues, formItem) => {\r\n    initialValues[formItem.id] = formItem.initialValue;\r\n    return initialValues;\r\n  }, {});\r\n  const formik = useFormik({\r\n    initialValues: getInitialValues,\r\n    validate,\r\n    onSubmit: (values) => {\r\n      if (values) {\r\n        const { from } = location.state || { from: { pathname: \"/\" } };\r\n        const sd = userActions.login(values.email, values.password, from);\r\n        dispatch(sd);\r\n      }\r\n    },\r\n  });\r\n  \r\n  return <Login formik={formik} />;\r\n};\r\n\r\nexport default LoginContainer;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport MyNotesContainer from \"./pages/myNotes/myNotesContainer\";\nimport About from \"./pages/about/aboutContainer\";\nimport SharedNotesContainer from \"./pages/sharedNotes/sharedNotesContainer\";\nimport Page404Container from \"./pages/page404/Page404Container\";\nimport RegisterContainer from \"./pages/register/registerContainer\";\nimport LoginContainer from \"./pages/login/loginContainer\";\n\nimport ROUTES from \"config/constants/routes\";\n\nconst componentRegistry = {\n  MyNotesContainer: MyNotesContainer,\n  RegisterContainer: RegisterContainer,\n  SharedNotesContainer: SharedNotesContainer,\n  Page404Container: Page404Container,\n  About: About,\n  LoginContainer: LoginContainer,\n};\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/iTechArt-lab-React\">\n      <div className=\"App\">\n        <Layout>\n          <Switch>\n            {ROUTES.map((route, index) =>\n              route.private ? (\n                <PrivateRoute\n                  exact\n                  path={route.path}\n                  component={componentRegistry[route.component]}\n                  key={index}\n                />\n              ) : (\n                <Route\n                  exact\n                  path={route.path}\n                  component={componentRegistry[route.component]}\n                  key={index}\n                />\n              )\n            )}\n            <Route path=\"*\">\n              <Redirect to=\"/not-found\" />\n            </Route>\n          </Switch>\n        </Layout>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { USERMODE } from \"config/constants/userMode\";\r\n\r\nlet user = JSON.parse(localStorage.getItem(\"user\"));\r\nconst initialState = user ? { loggedIn: true, user } : {};\r\n\r\nexport const authenticationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USERMODE.LOGIN_REQUEST:\r\n      return {\r\n        loggingIn: true,\r\n        user: action.user,\r\n      };\r\n    case USERMODE.LOGIN_SUCCESS:\r\n      return {\r\n        loggedIn: true,\r\n        user: action.user,\r\n      };\r\n    case USERMODE.LOGIN_FAILURE:\r\n      return {};\r\n    case USERMODE.LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {authenticationReducer} from \"./authenticationReducer\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    alertReducer,\r\n    authenticationReducer,\r\n    registrationReducer,\r\n    usersReducer\r\n});\r\n\r\nexport default rootReducer;","import { ALERTMODE } from \"config/constants/alertMode\";\r\n\r\nexport const alertReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ALERTMODE.SUCCESS:\r\n      return {\r\n        type: \"success\",\r\n        message: action.message,\r\n      };\r\n    case ALERTMODE.ERROR:\r\n      return {\r\n        type: \"error\",\r\n        message: action.message,\r\n      };\r\n    case ALERTMODE.CLEAR:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { USERMODE } from \"config/constants/userMode\";\r\n\r\nexport const registrationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USERMODE.REGISTER_REQUEST:\r\n      return { registering: true };\r\n    case USERMODE.REGISTER_SUCCESS:\r\n      return {};\r\n    case USERMODE.REGISTER_FAILURE:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { USERMODE } from \"config/constants/userMode\";\r\n\r\nexport function usersReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case USERMODE.GETALL_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case USERMODE.GETALL_SUCCESS:\r\n      return {\r\n        items: action.users,\r\n      };\r\n    case USERMODE.GETALL_FAILURE:\r\n      return {\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport rootReducer from 'config/reducers';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n\r\n    composeWithDevTools(\r\n        applyMiddleware(thunkMiddleware)\r\n        // other store enhancers if any\r\n      ),\r\n\r\n    /*applyMiddleware(\r\n        thunkMiddleware,\r\n        //loggerMiddleware\r\n    )*/\r\n);\r\nexport default store;","import NOTES from \"config/constants/notes.js\";\r\n\r\nlet users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\nconst setDefaultNotes = (userEmail) => {\r\n  const notes = JSON.parse(localStorage.getItem(\"notes\"));\r\n  if (!notes) {\r\n    localStorage.setItem(\"notes\", JSON.stringify({ [userEmail]: NOTES }));\r\n  } else if (!notes[userEmail]) {\r\n    notes[userEmail] = NOTES;\r\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  }\r\n};\r\nexport const configureFakeBackend = () => {\r\n  let realFetch = window.fetch;\r\n  window.fetch = function (url, opts) {\r\n    const { method, headers } = opts;\r\n    const body = opts.body && JSON.parse(opts.body);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const handleRoute = () => {\r\n        switch (true) {\r\n          case url.endsWith(\"/users/authenticate\") && method === \"POST\":\r\n            return authenticate();\r\n          case url.endsWith(\"/users/register\") && method === \"POST\":\r\n            return register();\r\n          case url.endsWith(\"/users\") && method === \"GET\":\r\n            return getUsers();\r\n          case url.endsWith(\"/notes\") && method === \"GET\":\r\n            return getNotes();\r\n          default:\r\n            return realFetch(url, opts)\r\n              .then((response) => resolve(response))\r\n              .catch((error) => reject(error));\r\n        }\r\n      };\r\n      // route functions\r\n      const authenticate = () => {\r\n        const { email, password } = body;\r\n        const user = users.find(\r\n          (x) => x.email === email && x.password === password\r\n        );\r\n        if (!user) return error(\"Username or password is incorrect\");\r\n\r\n        return okResult({\r\n          id: user.id,\r\n          email: user.email,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          token: \"fake-token\",\r\n        });\r\n      };\r\n\r\n      const register = () => {\r\n        const user = body;\r\n\r\n        if (users.find((x) => x.email === user.email)) {\r\n          return error(`Username  ${user.email} is already taken`);\r\n        }\r\n\r\n        user.id = users.length ? Math.max(...users.map((x) => x.id)) + 1 : 1;\r\n        users.push(user);\r\n        localStorage.setItem(\"users\", JSON.stringify(users));\r\n        setDefaultNotes(user.email);\r\n\r\n        return okResult();\r\n      };\r\n\r\n      const getUsers = () => {\r\n        if (!isLoggedIn()) return unauthorized();\r\n\r\n        return ok(users);\r\n      };\r\n\r\n      const getNotes = () => {\r\n        let notesList = [];\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        if (user) {\r\n          const userEmail = user[\"email\"];\r\n          const allNotes = JSON.parse(localStorage.getItem(\"notes\"))\r\n          notesList = allNotes?.[userEmail] || [];\r\n        }\r\n        const pageId =\r\n          opts.params.page + 1 >= notesList.length\r\n            ? null\r\n            : opts.params.page + 1;\r\n        return ok({ data: [notesList[opts.params.page]], nextId: pageId });\r\n      };\r\n\r\n      // helper functions\r\n      const ok = (body) => {\r\n        resolve({\r\n          ok: true,\r\n          text: () => JSON.stringify(body),\r\n        });\r\n      };\r\n      const okResult = (body) => {\r\n        resolve({\r\n          ok: true,\r\n          text: () => Promise.resolve(JSON.stringify(body)),\r\n        });\r\n      };\r\n\r\n      const unauthorized = () => {\r\n        resolve({\r\n          status: 401,\r\n          text: () =>\r\n            Promise.resolve(JSON.stringify({ message: \"Unauthorized\" })),\r\n          //JSON.stringify({ message: \"Unauthorized\" })\r\n        });\r\n      };\r\n\r\n      const error = (message) => {\r\n        resolve({\r\n          status: 400,\r\n          text: () => Promise.resolve(JSON.stringify({ message })),\r\n          //text: () => JSON.stringify({ message }),\r\n        });\r\n      };\r\n\r\n      const isLoggedIn = () => {\r\n        return headers[\"Authorization\"] === \"Bearer fake-jwt-token\";\r\n      };\r\n\r\n      setTimeout(handleRoute, 500);\r\n    });\r\n  };\r\n};\r\n\r\nexport default configureFakeBackend;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./utils/store\";\n\nimport {configureFakeBackend} from \"./utils/fake-backend\";\nconfigureFakeBackend();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}